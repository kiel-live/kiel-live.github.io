{"version":3,"file":"index.ed965668.js","sources":["../../vite/modulepreload-polyfill","../../plugin-vue:export-helper","../../src/components/atomic/Button.vue","../../../../../../../../@vite-plugin-pwa/virtual:pwa-register/vue","../../src/compositions/usePrefersColorScheme.ts","../../src/App.vue","../../vite/preload-helper","../../src/router.ts","../../src/api/index.ts","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","<template>\n  <div\n    class=\"border-1 hover:border-gray-300 dark:border-gray-400 dark:hover:border-gray-500 rounded p-2 flex justify-center cursor-pointer\"\n  >\n    <router-link v-if=\"to\" class=\"flex items-center\" :to=\"{ name: to }\" replace>\n      <slot>\n        <span>{{ text }}</span>\n      </slot>\n    </router-link>\n    <a v-else-if=\"href\" :href=\"href\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"flex items-center\">\n      <slot>\n        <span>{{ text }}</span>\n      </slot>\n    </a>\n    <button v-else type=\"button\">\n      <slot>\n        <span>{{ text }}</span>\n      </slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Button',\n\n  props: {\n    to: {\n      type: String,\n      default: null,\n    },\n\n    href: {\n      type: String,\n      default: null,\n    },\n\n    text: {\n      type: String,\n      default: null,\n    },\n  },\n});\n</script>\n","// src/client/build/vue.ts\nimport { ref } from \"vue\";\n\n// src/client/build/register.ts\nimport { Workbox, messageSW } from \"workbox-window\";\nvar autoUpdateMode = \"false\";\nvar auto = autoUpdateMode === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  let wb;\n  let registration;\n  const updateServiceWorker = async (reloadPage = true) => {\n    if (!auto) {\n      if (reloadPage) {\n        wb == null ? void 0 : wb.addEventListener(\"controlling\", (event) => {\n          if (event.isUpdate)\n            window.location.reload();\n        });\n      }\n      if (registration && registration.waiting) {\n        await messageSW(registration.waiting, { type: \"SKIP_WAITING\" });\n      }\n    }\n  };\n  if (\"serviceWorker\" in navigator) {\n    wb = new Workbox(\"/sw.js\", { scope: \"/\" });\n    wb.addEventListener(\"activated\", (event) => {\n      if (event.isUpdate)\n        auto && window.location.reload();\n      else\n        onOfflineReady == null ? void 0 : onOfflineReady();\n    });\n    if (!auto) {\n      const showSkipWaitingPrompt = () => {\n        onNeedRefresh == null ? void 0 : onNeedRefresh();\n      };\n      wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n      wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n    }\n    wb.register({ immediate }).then((r) => {\n      registration = r;\n      onRegistered == null ? void 0 : onRegistered(r);\n    }).catch((e) => {\n      onRegisterError == null ? void 0 : onRegisterError(e);\n    });\n  }\n  return updateServiceWorker;\n}\n\n// src/client/build/vue.ts\nfunction useRegisterSW(options = {}) {\n  const {\n    immediate = true,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  const needRefresh = ref(false);\n  const offlineReady = ref(false);\n  const updateServiceWorker = registerSW({\n    immediate,\n    onNeedRefresh() {\n      needRefresh.value = true;\n      onNeedRefresh == null ? void 0 : onNeedRefresh();\n    },\n    onOfflineReady() {\n      offlineReady.value = true;\n      onOfflineReady == null ? void 0 : onOfflineReady();\n    },\n    onRegistered,\n    onRegisterError\n  });\n  return {\n    updateServiceWorker,\n    offlineReady,\n    needRefresh\n  };\n}\nexport {\n  useRegisterSW\n};\n","import { ref } from 'vue';\n\nfunction setDarkMode(enabled: boolean) {\n  if (enabled) {\n    document.documentElement.classList.add('dark');\n  } else {\n    document.documentElement.classList.remove('dark');\n  }\n}\n\nconst prefersColorSchemeDark = ref<boolean>();\n\nexport const usePrefersColorSchemeDark = () => {\n  if (prefersColorSchemeDark.value !== undefined) {\n    return prefersColorSchemeDark;\n  }\n\n  if (!window.matchMedia) {\n    prefersColorSchemeDark.value = false;\n    return prefersColorSchemeDark;\n  }\n\n  prefersColorSchemeDark.value = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  setDarkMode(prefersColorSchemeDark.value);\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\n    prefersColorSchemeDark.value = e.matches;\n    setDarkMode(prefersColorSchemeDark.value);\n  });\n\n  return prefersColorSchemeDark;\n};\n","<template>\n  <div class=\"app flex flex-col m-auto w-full h-full bg-gray-100 dark:bg-dark-400 dark:text-gray-300\">\n    <router-view />\n    <ReloadPrompt />\n    <UpdateNotice />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport ReloadPrompt from '~/components/ReloadPrompt.vue';\nimport UpdateNotice from '~/components/UpdateNotice.vue';\nimport { usePrefersColorSchemeDark } from '~/compositions/usePrefersColorScheme';\n\nexport default defineComponent({\n  name: 'App',\n\n  components: { ReloadPrompt, UpdateNotice },\n\n  setup() {\n    usePrefersColorSchemeDark();\n\n    return {};\n  },\n});\n</script>\n\n<!-- eslint-disable-next-line vue-scoped-css/enforce-style-type -->\n<style>\nhtml,\nbody,\n#app {\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  /* disable android pull to refresh feature */\n  overflow-y: hidden;\n}\n*::-webkit-scrollbar {\n  @apply bg-transparent w-12px h-12px;\n}\n\n* {\n  scrollbar-width: thin;\n}\n\n*::-webkit-scrollbar-thumb {\n  transition: background 0.2s ease-in-out;\n  border: 3px solid transparent;\n  @apply bg-cool-gray-500 dark:bg-dark-200 rounded-full bg-clip-content;\n}\n\n*::-webkit-scrollbar-thumb:hover {\n  @apply bg-cool-gray-600 dark:bg-dark-100;\n}\n\n*::-webkit-scrollbar-corner {\n  @apply bg-transparent;\n}\n</style>\n\n<style scoped>\n.app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { Component } from 'vue';\nimport { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\nlet firstStartOfApp = true;\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/',\n    name: 'home',\n    component: (): Component => import('~/views/Home.vue'),\n  },\n  {\n    path: '/map/:markerType/:markerId',\n    name: 'map-marker',\n    component: (): Component => import('~/views/Home.vue'),\n    props: true,\n  },\n  {\n    path: '/search',\n    name: 'search',\n    component: (): Component => import('~/views/Home.vue'),\n    props: true,\n  },\n  {\n    path: '/favorites',\n    name: 'favorites',\n    component: (): Component => import('~/views/Home.vue'),\n    props: true,\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: (): Component => import('~/views/Home.vue'),\n    props: true,\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'not-found',\n    component: (): Component => import('~/views/NotFound.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach((to, from, next): void => {\n  if (firstStartOfApp && to.name === 'home') {\n    firstStartOfApp = false;\n    next({ name: 'favorites' });\n    return;\n  }\n\n  firstStartOfApp = false;\n  next();\n});\n\nexport default router;\n","import {\n  connect,\n  consumerOpts,\n  createInbox,\n  Events,\n  JetStreamClient,\n  JetStreamSubscription,\n  NatsConnection,\n  StringCodec,\n} from 'nats.ws';\nimport { Ref, ref } from 'vue';\n\nimport { Models, Stop, Trip, Vehicle } from '~/api/types';\n\nconst sc = StringCodec();\n\nexport const DeletePayload = '---';\n\nexport const vehicles = ref<Record<string, Vehicle>>({});\nexport const stops = ref<Record<string, Stop>>({});\nexport const trips = ref<Record<string, Trip>>({});\nexport const isConnected = ref(false);\n\nconst subscriptions = ref<Record<string, JetStreamSubscription>>({});\nconst subscriptionsQueue: Record<string, Ref<Record<string, Models>>> = {};\n\nlet nc: NatsConnection | undefined;\nlet js: JetStreamClient | undefined;\n\nexport const subscribe = async (subject: string, state: Ref<Record<string, Models>>) => {\n  if (subscriptions.value[subject]) {\n    return;\n  }\n\n  if (!isConnected.value || !js) {\n    subscriptionsQueue[subject] = state;\n    return;\n  }\n\n  const opts = consumerOpts();\n  opts.deliverTo(createInbox());\n  opts.deliverAll();\n  opts.ackNone();\n  opts.replayInstantly();\n  const sub = await js.subscribe(subject, opts);\n  subscriptions.value[subject] = sub;\n\n  void (async () => {\n    // eslint-disable-next-line no-restricted-syntax\n    for await (const m of sub) {\n      const raw = sc.decode(m.data);\n      if (raw === DeletePayload) {\n        // TODO\n        // delete vehicles.value[''];\n      } else {\n        const newModel = JSON.parse(raw) as Models;\n        // eslint-disable-next-line no-param-reassign\n        state.value = Object.freeze({\n          ...state.value,\n          [newModel.id]: Object.freeze(newModel),\n        });\n      }\n    }\n  })();\n};\n\nexport const unsubscribe = async (subject: string) => {\n  if (subscriptions.value[subject]) {\n    subscriptions.value[subject].unsubscribe();\n    delete subscriptions.value[subject];\n  }\n  if (subscriptionsQueue[subject]) {\n    delete subscriptionsQueue[subject];\n  }\n};\n\nconst processSubscriptionsQueue = async () => {\n  await Promise.all(\n    Object.keys(subscriptionsQueue).map(async (subject) => {\n      await subscribe(subject, subscriptionsQueue[subject]);\n      delete subscriptionsQueue[subject];\n    }),\n  );\n};\n\nexport const loadApi = async () => {\n  const server = import.meta.env.VITE_NATS_URL;\n  if (!server || typeof server !== 'string') {\n    throw new Error('NATS_URL is invalid!');\n  }\n\n  nc = await connect({\n    servers: server,\n    waitOnFirstConnect: true,\n  });\n  isConnected.value = true;\n  js = nc.jetstream();\n\n  await processSubscriptionsQueue();\n\n  void (async () => {\n    // eslint-disable-next-line no-restricted-syntax\n    for await (const s of nc.status()) {\n      if (s.type === Events.Disconnect) {\n        isConnected.value = false;\n      }\n      if (s.type === Events.Reconnect) {\n        isConnected.value = true;\n\n        await processSubscriptionsQueue();\n      }\n    }\n  })();\n};\n","import 'windi.css';\n\nimport { createApp } from 'vue';\n\nimport App from '~/App.vue';\nimport router from '~/router';\n\nimport { loadApi } from './api';\n\nconst app = createApp(App);\n\napp.use(router);\napp.mount('#app');\n\nvoid loadApi();\n"],"names":["messageSW","Workbox"],"mappings":"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"}