{"version":3,"file":"Home.8cde9112.js","sources":["../../src/components/DetailsPopup.vue","../../src/components/layout/AppBar.vue","../../src/compositions/useFavorites.ts","../../src/components/popups/BusPopup.vue","../../src/components/popups/MarkerPopup.vue","../../node_modules/.pnpm/fuse.js@6.4.6/node_modules/fuse.js/dist/fuse.esm.js","../../src/components/popups/SearchPopup.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"isOpen\"\n    class=\"absolute bottom-0 left-0 right-0 flex flex-col w-full z-10 bg-white shadow-top md:shadow-right md:rounded-none md:w-80 md:top-0 md:h-auto transition dark:bg-dark-400 dark:text-gray-300 dark:border-dark-800\"\n    :class=\"{\n      'overflow-hidden max-h-0': actualSize === 'closed',\n      'h-full md:mx-auto md:w-200 md:shadow-none': actualSize === 'full',\n      'h-1/2': size === '1/2' && actualSize === 'default',\n      'h-3/4': size === '3/4' && actualSize === 'default',\n      'p-4 pb-0 pt-2': actualSize !== 'closed' && actualSize !== 'full',\n      'rounded-t-2xl': actualSize !== 'full',\n      'rounded-none p-4 pt-16': actualSize === 'full',\n      'opacity-80': actualSize === 'closing',\n      fade: !dragging,\n    }\"\n    :style=\"{ height: isOpen ? (height === undefined ? undefined : `${height}px`) : 0 }\"\n    @touchmove=\"move\"\n    @touchend=\"drop\"\n  >\n    <div v-if=\"!disableResize\" class=\"w-full -mt-4 pt-4 pb-4 md:hidden\" @touchstart=\"drag\">\n      <div v-show=\"actualSize !== 'full'\" class=\"flex-shrink-0 bg-gray-500 w-12 h-1.5 rounded-full mx-auto\" />\n    </div>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, toRef } from 'vue';\n\nexport default defineComponent({\n  name: 'DetailsPopup',\n\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true,\n    },\n\n    size: {\n      type: String as PropType<'3/4' | '1/2' | '1'>,\n      default: '3/4',\n    },\n\n    disableResize: {\n      type: Boolean,\n    },\n  },\n\n  emits: {\n    close: () => true,\n  },\n\n  setup(props, { emit }) {\n    const dragging = ref(false);\n    const height = ref<number>();\n    const isOpen = toRef(props, 'isOpen');\n    const size = toRef(props, 'size');\n    const disableResize = toRef(props, 'disableResize');\n\n    const actualSize = computed(() => {\n      if (disableResize.value && size.value === '1') {\n        return 'full';\n      }\n\n      if (!isOpen.value) {\n        return 'closed';\n      }\n\n      if (dragging.value) {\n        if (height.value === undefined) {\n          return 'closed';\n        }\n\n        const percentage = height.value / window.innerHeight;\n        if ((size.value === '1/2' && percentage > 0.6) || (size.value === '3/4' && percentage > 0.85)) {\n          return 'maximizing';\n        }\n\n        if ((size.value === '1/2' && percentage < 0.4) || (size.value === '3/4' && percentage < 0.65)) {\n          return 'closing';\n        }\n\n        return 'defaulting';\n      }\n\n      if (height.value === 0) {\n        return 'closed';\n      }\n\n      if (height.value === window.innerHeight) {\n        return 'full';\n      }\n\n      return 'default';\n    });\n\n    function drag(e: TouchEvent) {\n      if (disableResize.value) {\n        return;\n      }\n\n      dragging.value = true;\n      height.value = window.innerHeight - e.touches[0].clientY;\n    }\n\n    function move(e: TouchEvent) {\n      if (!dragging.value) {\n        return;\n      }\n      height.value = window.innerHeight - e.touches[0].clientY;\n    }\n\n    function drop() {\n      if (!dragging.value) {\n        return;\n      }\n\n      if (actualSize.value === 'maximizing') {\n        height.value = window.innerHeight;\n      } else if (actualSize.value === 'closing') {\n        height.value = undefined;\n        emit('close');\n      } else if (actualSize.value === 'defaulting') {\n        height.value = undefined;\n      }\n\n      dragging.value = false;\n    }\n\n    return { drag, move, drop, actualSize, height, dragging };\n  },\n});\n</script>\n\n<style scoped>\n.fade {\n  transition: height 0.15s ease;\n}\n</style>\n","<template>\n  <div\n    class=\"absolute top-0 left-0 right-0 mx-2 mt-2 h-12 flex rounded-md py-4 items-center justify-between bg-white border-1 border-gray-200 shadow-xl z-20 md:transform md:-translate-x-1/2 md:right-auto md:left-1/2 md:w-96 dark:bg-dark-400 dark:text-gray-300 dark:border-dark-800\"\n  >\n    <router-link :to=\"{ name: 'home' }\" class=\"p-2\">\n      <img :alt=\"t('logo_alt')\" src=\"../../assets/logo.png\" class=\"w-6 h-6\" />\n    </router-link>\n    <div v-if=\"isConnected\" class=\"flex flex-grow mr-2\">\n      <input\n        :value=\"internalSearchInput\"\n        type=\"text\"\n        class=\"bg-transparent p-2 border border-transparent focus:outline-none focus-visible:(outline-none rounded-md border-gray-300 border-opacity-50) w-full h-full\"\n        :placeholder=\"`${t('search')} ...`\"\n        autofocus\n        @input=\"(event) => (internalSearchInput = (event.currentTarget as HTMLInputElement).value)\"\n        @keydown.escape=\"$router.back()\"\n        @click=\"$router.push({ name: 'search' })\"\n      />\n    </div>\n    <div v-else class=\"flex space-x-2 mr-2 items-center\">\n      <span>{{ t('no_connection') }}</span>\n      <i-ic-baseline-cloud-off class=\"text-red-600\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport { isConnected } from '~/api';\n\nexport default defineComponent({\n  name: 'AppBar',\n\n  props: {\n    searchInput: {\n      type: String,\n      required: true,\n    },\n  },\n\n  emits: {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    'update:search-input': (_searchInput: string) => true,\n  },\n\n  setup(props, { emit }) {\n    const { t } = useI18n();\n    const route = useRoute();\n    const router = useRouter();\n\n    const searchInput = toRef(props, 'searchInput');\n    const internalSearchInput = computed({\n      get() {\n        return searchInput.value;\n      },\n      set(_searchInput: string) {\n        emit('update:search-input', _searchInput);\n\n        if (_searchInput.length > 0 && route.name !== 'search') {\n          void router.push({ name: 'search' });\n        }\n\n        if (_searchInput.length === 0 && route.name === 'search') {\n          void router.push({ name: 'home' });\n        }\n      },\n    });\n\n    return { t, isConnected, internalSearchInput };\n  },\n});\n</script>\n","import { computed, ref } from 'vue';\n\ntype Favorite = {\n  id: string;\n  type: string;\n  name: string;\n};\nconst LS_FAVORITES_KEY = 'kiel-live-favorites-v1';\n\n// migrate legacy favorites\ntype LegacyFavorite = {\n  id: string;\n  name: string;\n  favorite: true;\n};\nconst LS_LEGACY_FAVORITES_KEY = 'favoriteStops';\nconst legacyLocalStorageItem = localStorage.getItem(LS_LEGACY_FAVORITES_KEY);\nif (legacyLocalStorageItem !== null) {\n  const legacyFavorites = JSON.parse(legacyLocalStorageItem) as LegacyFavorite[];\n  localStorage.setItem(\n    LS_FAVORITES_KEY,\n    JSON.stringify(legacyFavorites.map((f) => ({ id: `kvg-${f.id}`, name: f.name, type: 'bus-stop' }))),\n  );\n  localStorage.removeItem(LS_LEGACY_FAVORITES_KEY);\n}\n\nconst favoritesRaw = ref<Favorite[]>(JSON.parse(localStorage.getItem(LS_FAVORITES_KEY) || '[]') as Favorite[]);\n\nconst favorites = computed({\n  get() {\n    return favoritesRaw.value;\n  },\n  set(_favorites: Favorite[]) {\n    favoritesRaw.value = _favorites;\n    localStorage.setItem(LS_FAVORITES_KEY, JSON.stringify(_favorites));\n  },\n});\n\nfunction addFavorite({ id, name, type }: Favorite) {\n  favorites.value = [...favorites.value, { id, name, type }];\n}\n\nfunction removeFavorite(favorite: Pick<Favorite, 'id'>) {\n  favorites.value = favorites.value.filter((f) => f.id !== favorite.id);\n}\n\nfunction isFavorite(favorite: Pick<Favorite, 'id'>) {\n  return favorites.value.some((f) => f.id === favorite.id);\n}\n\nexport function useFavorites() {\n  return { favorites, addFavorite, removeFavorite, isFavorite };\n}\n","<template>\n  <div v-if=\"vehicle\" class=\"flex flex-col min-h-0 flex-grow\">\n    <div class=\"flex pb-2 mb-2 border-b-1 dark:border-dark-100 space-x-2 items-center\">\n      <i-fa-bus v-if=\"vehicle.type === 'bus'\" />\n      <span class=\"text-lg\">{{ vehicle.name }}</span>\n    </div>\n    <template v-if=\"trip\">\n      <div v-if=\"trip.arrivals?.length\" class=\"overflow-y-auto\">\n        <router-link\n          v-for=\"(arrival, i) in trip.arrivals\"\n          :key=\"arrival.id\"\n          :to=\"{ name: 'map-marker', params: { markerType: 'bus-stop', markerId: arrival.id } }\"\n          class=\"flex w-full items-center\"\n          :class=\"{ 'text-gray-500': arrival.state === 'departed', 'mt-6': i === 0 && arrival.state === 'predicted' }\"\n        >\n          <span class=\"w-14 min-w-12\">{{ arrival.planned }}</span>\n          <div\n            class=\"marker relative flex justify-center items-center mx-4 h-12 w-8 min-w-4 after:(absolute top-0 h-full bg-gray-800 dark:bg-gray-300)\"\n            :class=\"{ 'after:(bg-gray-500 dark:bg-gray-500)': arrival.state === 'departed' }\"\n          >\n            <div\n              v-if=\"\n                arrival.state !== 'departed' &&\n                (trip.arrivals[i - 1] === undefined || trip.arrivals[i - 1].state === 'departed')\n              \"\n              class=\"vehicle before:(h-4 w-4 bg-red-700 rounded-full)\"\n              :class=\"{ driving: arrival.state === 'predicted' }\"\n            >\n              <div class=\"pulsating border-3 border-red-700 border-solid rounded-full\" />\n            </div>\n            <div\n              v-if=\"\n                (arrival.state !== 'departed' && trip.arrivals[i - 1]?.state !== 'departed') ||\n                arrival.state === 'predicted'\n              \"\n              class=\"rounded-full h-4 w-4 flex items-center justify-center bg-gray-800 dark:bg-gray-300\"\n            />\n          </div>\n          <span class=\"w-full\">{{ arrival.name }}</span>\n        </router-link>\n      </div>\n      <NoData v-else>{{ t('trip_expired') }}</NoData>\n    </template>\n    <i-fa-solid-circle-notch v-else class=\"mx-auto mt-4 text-3xl animate-spin\" />\n  </div>\n  <NoData v-else>{{ t('trip_does_not_exist') }}</NoData>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onUnmounted, PropType, toRef, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { subscribe, trips, unsubscribe, vehicles } from '~/api';\nimport { Marker } from '~/api/types';\nimport NoData from '~/components/NoData.vue';\n\nexport default defineComponent({\n  name: 'BusPopup',\n\n  components: { NoData },\n\n  props: {\n    marker: {\n      type: Object as PropType<Marker>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const { t } = useI18n();\n\n    const marker = toRef(props, 'marker');\n    let subject: string | null = null;\n\n    const vehicle = computed(() => vehicles.value[marker.value.id]);\n\n    const trip = computed(() => {\n      if (!trips.value || !vehicle.value) {\n        return null;\n      }\n      return trips.value[vehicle.value.tripId];\n    });\n\n    watch(\n      vehicle,\n      async () => {\n        if (subject !== null) {\n          await unsubscribe(subject);\n        }\n        if (!vehicle.value) {\n          return;\n        }\n        subject = `data.map.trip.${vehicle.value.tripId}`;\n        await subscribe(subject, trips);\n      },\n      { immediate: true },\n    );\n\n    onUnmounted(async () => {\n      if (subject !== null) {\n        await unsubscribe(subject);\n      }\n    });\n    return { t, trip, vehicle };\n  },\n});\n</script>\n\n<style scoped>\n.marker::after {\n  left: calc(50% - 1px);\n  width: 2px;\n  content: '';\n}\n\n.vehicle {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n}\n.vehicle.driving {\n  top: -0.25rem;\n}\n\n.vehicle::before {\n  display: block;\n  content: '';\n}\n\n.pulsating {\n  position: absolute;\n  width: 2rem;\n  height: 2rem;\n  left: calc(50% - 1rem);\n  top: calc(50% - 1rem);\n  transform: translate(-50%, -50%);\n  animation: pulsate 1.5s ease-out;\n  animation-iteration-count: infinite;\n  opacity: 0;\n}\n\n@keyframes pulsate {\n  0% {\n    transform: scale(0.1, 0.1);\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    transform: scale(1.2, 1.2);\n    opacity: 0;\n  }\n}\n</style>\n","<template>\n  <BusPopup v-if=\"marker.type === 'bus'\" :marker=\"marker\" />\n  <BusStopPopup v-else-if=\"marker.type === 'bus-stop'\" :marker=\"marker\" />\n  <pre v-else>{{ marker }}</pre>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue';\n\nimport { Marker } from '~/api/types';\nimport BusPopup from '~/components/popups/BusPopup.vue';\nimport BusStopPopup from '~/components/popups/BusStopPopup.vue';\n\nexport default defineComponent({\n  name: 'MarkerPopup',\n\n  components: { BusPopup, BusStopPopup },\n\n  props: {\n    marker: {\n      type: Object as PropType<Marker>,\n      required: true,\n    },\n  },\n});\n</script>\n","/**\n * Fuse.js v6.4.6 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const norm = 1 / Math.sqrt(numTokens);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore$1(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.4.6';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","<template>\n  <div class=\"flex flex-col min-h-0 flex-grow\">\n    <div class=\"flex pb-2 mb-2 border-b-1 dark:border-dark-100 space-x-2 items-center\">\n      <i-ph-magnifying-glass-bold />\n      <span class=\"text-lg\">{{ t('search_result') }}</span>\n    </div>\n    <div v-if=\"searchResults.length === 0 && searchInput.length < 3\" class=\"m-auto max-w-52 text-center text-xl\">\n      <p>{{ t('search_stop_vehicle') }}</p>\n    </div>\n    <div v-else-if=\"searchResults.length === 0 && searchInput.length >= 3\" class=\"m-auto max-w-52 text-center text-xl\">\n      <p>{{ t('no_entry') }}</p>\n    </div>\n    <div class=\"flex flex-col overflow-y-auto\">\n      <router-link\n        v-for=\"searchResult in searchResults\"\n        :key=\"searchResult.refIndex\"\n        :to=\"{ name: 'map-marker', params: { markerType: searchResult.item.type, markerId: searchResult.item.id } }\"\n        class=\"flex py-2 not-last:border-b-1 dark:border-dark-300 max-w-full\"\n        @click=\"$emit('update:search-input', '')\"\n      >\n        <i-mdi-sign-real-estate v-if=\"searchResult.item.type === 'bus-stop'\" class=\"mr-2\" />\n        <!-- <i-fa-bus v-else-if=\"searchResult.item.type === 'bus'\" class=\"mr-2\" /> -->\n        <div class=\"\">\n          {{ searchResult.item.name }}\n        </div>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Fuse from 'fuse.js';\nimport { computed, defineComponent, onMounted, toRef } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { stops, subscribe, vehicles } from '~/api';\n\nexport default defineComponent({\n  name: 'SearchPopup',\n\n  props: {\n    searchInput: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    'update:search-input': (_searchInput: string) => true,\n  },\n\n  setup(props) {\n    const { t } = useI18n();\n\n    const searchInput = toRef(props, 'searchInput');\n    const searchData = computed(() => [...Object.values(stops.value)]);\n    const searchIndex = computed(\n      () =>\n        new Fuse(searchData.value, {\n          includeScore: true,\n          keys: ['name'],\n          threshold: 0.4,\n        }),\n    );\n\n    const searchResults = computed(() => {\n      if (searchInput.value === '' || searchInput.value.length < 3) {\n        return [];\n      }\n      // limit to max 20 results\n      return searchIndex.value.search(searchInput.value).slice(0, 20);\n    });\n\n    onMounted(async () => {\n      await subscribe('data.map.vehicle.>', vehicles);\n      await subscribe('data.map.stop.>', stops);\n    });\n\n    return { t, searchResults };\n  },\n});\n</script>\n"],"names":[],"mappings":"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"}