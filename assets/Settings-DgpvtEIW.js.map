{"version":3,"file":"Settings-DgpvtEIW.js","sources":["../../src/components/atomic/Select.vue","../../src/views/settings/Settings.vue"],"sourcesContent":["<template>\n  <select\n    v-model=\"innerValue\"\n    class=\"bg-transparent p-2 w-full max-w-64 h-12 border border-transparent rounded-md border-gray-300 border-opacity-50 focus-visible:outline-none focus-visible:border-blue-700 focus-visible:border-opacity-100 focus-visible:dark:border-blue-400\"\n  >\n    <option v-for=\"option in options\" :key=\"option.value\" :value=\"option.value\">{{ option.label }}</option>\n  </select>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, toRef } from 'vue';\n\ntype OptionValue = string | number;\n\nconst props = defineProps<{\n  modelValue: OptionValue;\n  options: { value: OptionValue; label: string }[];\n}>();\n\nconst emit = defineEmits<{\n  (e: 'update:modelValue', v: OptionValue): void;\n}>();\n\nconst modelValue = toRef(props, 'modelValue');\nconst innerValue = computed({\n  get: () => modelValue.value,\n  set: (value) => {\n    emit('update:modelValue', value);\n  },\n});\n</script>\n","<template>\n  <SettingsContainer>\n    <h1 class=\"mb-2 text-xl font-bold\">{{ t('settings') }}</h1>\n\n    <div class=\"flex flex-col gap-2\">\n      <div class=\"flex gap-4 items-center justify-between\">\n        <label class=\"flex flex-col\" for=\"lite-mode\">\n          <span>{{ t('lite_mode') }}</span>\n          <span class=\"text-sm text-gray-500 dark:text-gray-400\">{{ t('lite_mode_description') }}</span>\n        </label>\n        <Checkbox\n          id=\"lite-mode\"\n          v-model=\"liteMode\"\n          @update:model-value=\"track('setting:lite-mode', { enabled: $event })\"\n        />\n      </div>\n\n      <div class=\"flex gap-4 items-center justify-between\">\n        <label class=\"flex flex-col\" for=\"theme\">\n          <span>{{ t('theme') }}</span>\n          <span class=\"text-sm text-gray-500 dark:text-gray-400\">{{ t('theme_description') }}</span>\n        </label>\n        <Select id=\"theme\" v-model=\"theme\" :options=\"options\" />\n      </div>\n    </div>\n  </SettingsContainer>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { Theme } from '~/compositions/useColorMode';\nimport { computed } from 'vue';\n\nimport { useI18n } from 'vue-i18n';\nimport Checkbox from '~/components/atomic/Checkbox.vue';\nimport Select from '~/components/atomic/Select.vue';\nimport SettingsContainer from '~/components/layout/SettingsContainer.vue';\nimport { useColorMode } from '~/compositions/useColorMode';\nimport { useTrack } from '~/compositions/useTrack';\nimport { useUserSettings } from '~/compositions/useUserSettings';\n\nconst { liteMode } = useUserSettings();\nconst { t } = useI18n();\nconst { track } = useTrack();\n\nconst theme = useColorMode({ emitAuto: true });\n\nconst options = computed<{ value: Theme; label: string }[]>(() => [\n  { value: 'auto', label: t('auto') },\n  { value: 'light', label: t('light') },\n  { value: 'dark', label: t('dark') },\n]);\n</script>\n"],"names":["props","__props","emit","__emit","modelValue","toRef","innerValue","computed","value","liteMode","useUserSettings","useI18n","track","useTrack","theme","useColorMode","options"],"mappings":"0cAcA,MAAMA,EAAQC,EAKRC,EAAOC,EAIPC,EAAaC,EAAML,EAAO,YAAY,EACtCM,EAAaC,EAAS,CAC1B,IAAK,IAAMH,EAAW,MACtB,IAAMI,GAAU,CACdN,EAAK,oBAAqBM,CAAK,CAAA,CACjC,CACD,y0BCWK,KAAA,CAAE,SAAAC,CAAS,EAAIC,EAAgB,EAC/B,CAAE,CAAE,EAAIC,EAAQ,EAChB,CAAE,MAAAC,CAAM,EAAIC,EAAS,EAErBC,EAAQC,EAAa,CAAE,SAAU,GAAM,EAEvCC,EAAUT,EAA4C,IAAM,CAChE,CAAE,MAAO,OAAQ,MAAO,EAAE,MAAM,CAAE,EAClC,CAAE,MAAO,QAAS,MAAO,EAAE,OAAO,CAAE,EACpC,CAAE,MAAO,OAAQ,MAAO,EAAE,MAAM,CAAE,CAAA,CACnC"}